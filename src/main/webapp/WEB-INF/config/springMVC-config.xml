<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:context="http://www.springframework.org/schema/context"   
       xmlns:p="http://www.springframework.org/schema/p"   
       xmlns:mvc="http://www.springframework.org/schema/mvc"   
       xmlns:jee="http://www.springframework.org/schema/jee"   
       xmlns:aop="http://www.springframework.org/schema/aop"   
       xmlns:jaxws="http://cxf.apache.org/jaxws"   
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:beans="http://www.springframework.org/schema/beans"    
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">  
    <!-- 需要扫描的包，@Repository、@Service等  
    -->  
     <!-- 启用spring mvc 注解 -->
    <context:annotation-config />
    
   <!-- 对指定包中所有类进行扫描，完成bean的创建和自动依赖注入功能 -->  
    <context:component-scan base-package="org.wry.web" ></context:component-scan>  
    <!--   
        启动springMVC注解功能，完成请求和注解POJO的映射  
        mvc:annotation-driven代替了AnnotationMethodHandlerAdapter、DefaultAnnotationHandlerMapping单独注册  
        在WebApplicationContext中注册下面两个类  
 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping  
 org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter  
        支持数据绑定过程中的类型转换服务  
        支持数字、日期、时间等数据的格式化  
        支持使用JSR-303的数据验证功能  
        支持XML和JSON的读写  
    --> 
    <mvc:annotation-driven />  
    <!-- 对模型视图名称进行解析，在模型视图名称上添加前后缀 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"   
        p:prefix="/WEB-INF/webs/" p:suffix=".jsp"></bean>  
      
    <!-- 这个default-servlet-handler 可以使用DispatcherServlet的url-pattern    
        是/*, 如果springmvc找不到handler来处理请求, 会自动放过,让serlvet container处理  
     -->  
    <mvc:default-servlet-handler/>  
    <!-- 该tag方便请求根view，这个view一般是静态的 -->  
    <mvc:view-controller path="/about" view-name="ablot"/>  
    <!-- 这个tag是方便重定向路径 -->  
    <mvc:resources location="/media/**" mapping="/media/"/>  
    <!-- json支持,依赖jackson-core-lgpl.jar、jackson-mapper-asl.jar、jackson-mapper-lgpl.jar -->  
    <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>  
    <!-- 注解验证，依赖validation-api.jar,hibernate-validator.jar -->  
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"></bean>  
    <!-- file上传，依赖commons-fileupload.jar -->  
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>  
    <!-- exception处理 -->  
   <!-- exception处理 -->  
    <beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"  
        p:defaultErrorView="common/error">  
        <beans:property name="exceptionMappings">  
            <beans:props>  
                <beans:prop key="java.lang.RuntimeException">common/error</beans:prop>  
            </beans:props>  
        </beans:property>  
    </beans:bean>
</beans>      