<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"   
    xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   
        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"   
    version="2.5">  
    <display-name>warehouse</display-name>  
    <!-- 默认页面 -->  
    <welcome-file-list>  
        <welcome-file>index.jsp</welcome-file>  
    </welcome-file-list>  
    <!-- servlet上下文初始化参数 -->  
    <!-- applicationContext.xml -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <!-- 启动容器就会加载此处配置的配置文件  
            第一种写法，配置文件放在src/main/resources下  
            第二种写法，配置文件放在/WEB-INF/conf/spring下，个人倾向第二种  
         -->  
        <!--    
        <param-value>classpath:applicationContext.xml</param-value>  
        -->  
        <param-value>/WEB-INF/config/applicationContext.xml</param-value>  
    </context-param>  
    <!-- log4j.properties -->  
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>/WEB-INF/config/log4j.properties</param-value>  
    </context-param>  
      
    <!-- listener -->  
    <!-- log4j监听器  
        应放在spring监听器之前，因为spring也会加载log4j.properties，放在后面会抛出两个警告   
    -->  
    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener>  
    <!-- spring监听器 -->  
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
      
    <!-- filter -->  
    <!-- 字符过滤器 -->  
    <filter>  
        <filter-name>characterEncodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>characterEncodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
      
    <!-- servlet -->  
    <!-- springMVC的servlet,加载/WEB-INF/conf/spring/springMVC-config.xml文件，启动springMVC   
        如果没有contextConfigLocation参数，则在/WEB_INF下去找springMVC-servlet.xml文件  
    -->  
    <servlet>  
        <servlet-name>springMVC</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <!--   
            <param-value></param-value>  
            -->  
            <param-value>/WEB-INF/config/springMVC-config.xml</param-value>  
        </init-param>  
        <!-- 值大于等于0表示容器启动应用时候加载该servlet，数值越小优先级越高 -->  
        <load-on-startup>1</load-on-startup>  
    </servlet>  
    <servlet-mapping>  
        <servlet-name>springMVC</servlet-name>  
        <url-pattern>*.do</url-pattern>  
    </servlet-mapping>  
    
    <!-- log4j.properties -->  
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>/WEB-INF/config/log4j.properties</param-value>  
    </context-param>  
<!-- log4j监听器  
        应放在spring监听器之前，因为spring也会加载log4j.properties，放在后面会抛出两个警告   
    -->  
    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener>  
</web-app>  